name: Build BWA-MEM2

on:
  # push:
  #   branches: [ main ]
  # pull_request:
  #   branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest  
    
    steps:
      - name: Checkout repository (with submodules)
        uses: actions/checkout@v4
        with: 
          submodules: recursive
        
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential
        
      - name: Build bwa-mem2
        run: |
          cd external/bwa-mem2
          make
        
      - name: Upload bwa-mem2 binaries
        uses: actions/upload-artifact@v4
        with:
          name: bwa-mem2-bin
          path: external/bwa-mem2/
  
  smoke-test:
    needs: build 
    runs-on: ubuntu-latest 

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with: 
          submodules: recursive

      - name: Download bwa-mem2 binary
        uses: actions/download-artifact@v4
        with:
          name: bwa-mem2-bin
          path: ./bwa-mem2-bin
      
      - name: Make test script and binary executable
        run: |
          chmod +x tests/bwa_smoke_test.sh
          chmod +x ./bwa-mem2-bin/bwa-mem2*
      
      - name: Print paths of downloaded files for debugging
        run: ls -lh ./bwa-mem2-bin

      - name: Run smoke test
        run: bash tests/bwa_smoke_test.sh

      - name: Upload sam file output
        uses: actions/upload-artifact@v4
        with: 
          name: bwa-mem2-test-results.sam
          path: ./tests/out.sam

  validate-output:
    needs: smoke-test
    runs-on: ubuntu-latest 

    steps: 
      - name: Install samtools
        run: sudo apt-get update && sudo apt-get install -y samtools

      - name: Download smoke-test output
        uses: actions/download-artifact@v4
        with:
          name: bwa-mem2-test-results.sam
          path: ./tests
      
      - name: Sort results
        run: samtools sort -o ./tests/out_sorted.sam ./tests/out.sam
        
      - name: Remove header
        run: grep -v '^@' ./tests/out_sorted.sam > ./tests/out_sorted_no_header.sam

      - name: Upload sorted headerless sam file output
        uses: actions/upload-artifact@v4
        with: 
          name: bwa-mem2-test-results-sorted-headerless.sam
          path: ./tests/out_sorted_no_header.sam
      
      - name: Perform checksum
        run: |
          sha256sum ./tests/out_sorted_no_header.sam
          echo e7a0a885bdd09ac5260a2636d5e192ce9463f2b16bd39f0f5041e2f79e2aca2b

  containerize:
    needs: validate-output
    runs-on: ubuntu-latest
    if: success() 

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Download bwa-mem2 binary
        uses: actions/download-artifact@v4
        with:
          name: bwa-mem2-bin
          path: ./external/bwa-mem2/
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}
      
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/bwa-mem2:latest
            ${{ secrets.DOCKER_USERNAME }}/bwa-mem2:${{ github.sha }}
          platforms: linux/amd64

      - name: Container smoke test
        run: |
          echo "Verifying container starts and binary works..."
          echo "BWA-MEM2 version: "
          docker run --rm ${{ secrets.DOCKER_USERNAME }}/bwa-mem2:${{ github.sha }} version

  deploy:
    needs: containerize
    runs-on: ubuntu-latest
    if: success()

    steps: 
      - name: SSH into EC2
        uses: appleboy/ssh-action@v1
        with: 
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
              docker pull ${{ secrets.DOCKER_USERNAME }}/bwa-mem2:${{ github.sha }}
              docker run --rm ${{ secrets.DOCKER_USERNAME }}/bwa-mem2:${{ github.sha }} version